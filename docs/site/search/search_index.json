{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"C++\u5b66\u4e60\u7b14\u8bb0 \uf0c1 \u57fa\u7840\u5b66\u8d77,\u4ece\u6c47\u7f16\u67e5\u770bC++\u7684\u672c\u8d28 Content: \uf0c1 Building Tools Overload function Default parameters Extern \"C\" inline reference Audience \uf0c1 It is only a tutorial for LAYMAN , but for FRESHMAN . You should have the basic experiences about programming, heard about the concpets of OOP . Note This is not an all-encompassing guide about C++ . I will never introduce all the core concepts, associated knowledge about C++, it is such a huge project, I only provide the introduction about core features and some auxiliary library features that frequently used in real world. Why I only introduce C++ 11? Because the C++ 14/17/20 are not widespreadly used now. You can check the C++ Compiler Support for more information about the support state of different C++ standards. Note You should prepare some tools for compiling the samples, the tools what I used for this serial are list in appendixes. Note Some samples maybe dependent on the 3rd-party library(gtest), I have included it in the code package. So I can shou the features clearly. References \uf0c1 C++ Compiler Support Modern C++ Manual Pages in Terminal","title":"Home"},{"location":"#c","text":"\u57fa\u7840\u5b66\u8d77,\u4ece\u6c47\u7f16\u67e5\u770bC++\u7684\u672c\u8d28","title":"C++\u5b66\u4e60\u7b14\u8bb0"},{"location":"#content","text":"Building Tools Overload function Default parameters Extern \"C\" inline reference","title":"Content:"},{"location":"#audience","text":"It is only a tutorial for LAYMAN , but for FRESHMAN . You should have the basic experiences about programming, heard about the concpets of OOP . Note This is not an all-encompassing guide about C++ . I will never introduce all the core concepts, associated knowledge about C++, it is such a huge project, I only provide the introduction about core features and some auxiliary library features that frequently used in real world. Why I only introduce C++ 11? Because the C++ 14/17/20 are not widespreadly used now. You can check the C++ Compiler Support for more information about the support state of different C++ standards. Note You should prepare some tools for compiling the samples, the tools what I used for this serial are list in appendixes. Note Some samples maybe dependent on the 3rd-party library(gtest), I have included it in the code package. So I can shou the features clearly.","title":"Audience"},{"location":"#references","text":"C++ Compiler Support Modern C++ Manual Pages in Terminal","title":"References"},{"location":"appendixes/","text":"Appendixes: References and Tools \uf0c1","title":"Appendixes"},{"location":"appendixes/#appendixes-references-and-tools","text":"","title":"Appendixes: References and Tools"},{"location":"assembly_language/","text":"\u6c47\u7f16 \uf0c1 __asm \u53ef\u4ee5C++\u548cASM\u6df7\u7f16 [] \u4e2d\u653e\u7684\u662f\u5730\u5740\u503c \u53d8\u91cf\u7684\u5730\u5740\u503c\u662f\u4e00\u76f4\u53d8\u5316\u7684\u4f8b\u5982\uff1a[ebp-04h]\uff0c\u5168\u5c40\u53d8\u91cf\u7684\u5730\u5740\u662f\u56fa\u5b9a\u7684\u4f8b\u5982\uff1a[11223344h] CPU\u5b58\u653e\u5927\u5c0f\u7aef\u6a21\u5f0f\uff08\u5927\u90e8\u5206\u662f\u5c0f\u7aef\u6a21\u5f0f\uff09\uff1a\u4f8b\u59824\u5b57\u8282\u5b58\u653e\u6570\u5b573\u4f8b\u5982\u5c0f\u7aef\u6a21\u5f0f \u4e8c\u8fdb\u5236 |\u5185\u5b58\u5730\u5740 | \u5185\u5bb9 | |------ |----- | |1128h | 00000011| |1129h | 00000000| |112Ah | 00000000| |112Bh | 00000000| \u5341\u516d\u8fdb\u5236 |\u5185\u5b58\u5730\u5740 | \u5185\u5bb9 | |------ |----- | |1128h | 03h| |1129h | 00h| |112Ah | 00h| |112Bh | 00h| lea : load effective address ret : return","title":"Assembly language"},{"location":"assembly_language/#_1","text":"__asm \u53ef\u4ee5C++\u548cASM\u6df7\u7f16 [] \u4e2d\u653e\u7684\u662f\u5730\u5740\u503c \u53d8\u91cf\u7684\u5730\u5740\u503c\u662f\u4e00\u76f4\u53d8\u5316\u7684\u4f8b\u5982\uff1a[ebp-04h]\uff0c\u5168\u5c40\u53d8\u91cf\u7684\u5730\u5740\u662f\u56fa\u5b9a\u7684\u4f8b\u5982\uff1a[11223344h] CPU\u5b58\u653e\u5927\u5c0f\u7aef\u6a21\u5f0f\uff08\u5927\u90e8\u5206\u662f\u5c0f\u7aef\u6a21\u5f0f\uff09\uff1a\u4f8b\u59824\u5b57\u8282\u5b58\u653e\u6570\u5b573\u4f8b\u5982\u5c0f\u7aef\u6a21\u5f0f \u4e8c\u8fdb\u5236 |\u5185\u5b58\u5730\u5740 | \u5185\u5bb9 | |------ |----- | |1128h | 00000011| |1129h | 00000000| |112Ah | 00000000| |112Bh | 00000000| \u5341\u516d\u8fdb\u5236 |\u5185\u5b58\u5730\u5740 | \u5185\u5bb9 | |------ |----- | |1128h | 03h| |1129h | 00h| |112Ah | 00h| |112Bh | 00h| lea : load effective address ret : return","title":"\u6c47\u7f16"},{"location":"building_tools/","text":"\u7f16\u8bd1 \uf0c1 Windows \u7f16\u8bd1\u5de5\u5177 Microsoft Studio 2017 \u7f16\u8bd1\u5feb\u6377\u952e \u5feb\u6377\u952e \u4f5c\u7528 Ctrl+F5 \u7f16\u8bd1\u3001\u8fd0\u884c F5 Debug Alt+g \u67e5\u770b\u53cd\u7f16\u8bd1 vscode \u5feb\u6377\u952e \u901a\u7528\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+Shift+P, F1 \u6253\u5f00\u547d\u4ee4\u9762\u677f Ctrl+P \u5feb\u901f\u6253\u5f00\u6587\u4ef6 Ctrl+Shift+N \u6253\u5f00\u65b0\u7a97\u53e3\u6216\u5b9e\u4f8b Ctrl+Shift+W \u5173\u95ed\u7a97\u53e3\u6216\u5b9e\u4f8b \u57fa\u7840\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+X \u526a\u5207\u5f53\u524d\u884c Ctrl+C \u590d\u5236\u5f53\u524d\u884c Alt+ \u2191 \u6216 \u2193 \u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a8\u5f53\u524d\u884c Shift+Alt + \u2193 \u6216 \u2191 \u5411\u4e0a\u6216\u5411\u4e0b\u590d\u5236\u5f53\u524d\u884c Ctrl+Shift+K \u5220\u9664\u5f53\u524d\u884c Ctrl+Enter \u5728\u5f53\u524d\u884c\u4ee5\u4e0b\u63d2\u5165 Ctrl+Shift+Enter \u5728\u5f53\u524d\u884c\u4ee5\u4e0a\u63d2\u5165 Ctrl+Shift+\\ \u8df3\u8f6c\u5230\u5339\u914d\u7684\u62ec\u53f7 Ctrl+] \u6216 [ \u7f29\u8fdb\u6216\u53d6\u6d88\u7f29\u8fdb Home \u8f6c\u5230\u884c\u9996 End \u8f6c\u5230\u884c\u5c3e Ctrl+Home \u8f6c\u5230\u9875\u9996 Ctrl+End \u8f6c\u5230\u9875\u5c3e Ctrl+\u2191 \u6216 \u2193 \u5411\u4e0a\u6216\u5411\u4e0b\u6eda\u52a8 Alt+PgUp \u6216 PgDown \u5411\u4e0a\u6216\u5411\u4e0b\u7ffb\u9875 Ctrl+Shift+[ \u6298\u53e0\u5f53\u524d\u4ee3\u7801\u5757 Ctrl+Shift+] \u5c55\u5f00\u5f53\u524d\u4ee3\u7801\u5757 Ctrl+K Ctrl+[ \u6298\u53e0\u6240\u6709\u5b50\u4ee3\u7801\u5757 Ctrl+K Ctrl+] \u5c55\u5f00\u6240\u6709\u5b50\u4ee3\u7801\u5757 Ctrl+K Ctrl+0 \u6298\u53e0\u6240\u6709\u4ee3\u7801\u5757 Ctrl+K Ctrl+J \u5c55\u5f00\u6240\u6709\u4ee3\u7801\u5757 Ctrl+K Ctrl+C \u6dfb\u52a0\u884c\u6ce8\u91ca Ctrl+K Ctrl+U \u5220\u9664\u884c\u6ce8\u91ca Ctrl+\u6216 \u6dfb\u52a0\u6216\u5220\u9664\u884c\u6ce8\u91ca Shift+Alt+A \u6dfb\u52a0\u6216\u5220\u9664\u5757\u6ce8\u91ca Alt+Z \u81ea\u52a8\u6362\u884c \u5bfc\u822a\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+T \u663e\u793a\u6240\u6709\u7b26\u53f7 Ctrl+G \u8df3\u8f6c\u5230\u884c Ctrl+P \u8df3\u8f6c\u5230\u6587\u4ef6 Ctrl+Shift+O \u8df3\u8f6c\u5230\u7b26\u53f7 Ctrl+Shift+M \u663e\u793a\u95ee\u9898\u9762\u677f F8 \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u95ee\u9898\u6216\u8b66\u544a Shift+F8 \u8df3\u8f6c\u5230\u524d\u4e00\u4e2a\u95ee\u9898\u6216\u8b66\u544a Ctrl+Shift+Tab \u663e\u793a\u7f16\u8f91\u5668\u6587\u4ef6\u5386\u53f2 Alt+ \u2190 \u6216 \u2192 \u5411\u540e\u6216\u5411\u524d\u67e5\u770b\u6587\u4ef6 Ctrl+M \u5f00\u542f\u6216\u5173\u95ed Tab \u79fb\u52a8\u7126\u70b9 \u641c\u7d22\u548c\u66ff\u6362\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+F \u67e5\u627e Ctrl+H \u66ff\u6362 F3 \u6216 Shift+F3 \u67e5\u627e\u4e0b\u4e00\u4e2a\u6216\u524d\u4e00\u4e2a Alt+Enter \u9009\u62e9\u6240\u6709\u5339\u914d\u9879 Ctrl+D \u9009\u62e9\u4e0b\u4e00\u4e2a\u5339\u914d\u9879 Ctrl+K Ctrl+D \u8df3\u8fc7\u5f53\u524d\u9009\u62e9\u9879 Alt+C \u6216 R \u6216 W \u5207\u6362\u5927\u5c0f\u5199\u654f\u611f\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u6216\u5168\u8bcd \u591a\u5149\u6807\u4e0e\u9009\u62e9\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Alt+Click \u63d2\u5165\u5149\u6807 Ctrl+Alt+ \u2191 \u6216 \u2193 \u5411\u4e0a\u6216\u5411\u4e0b\u63d2\u5165\u5149\u6807 Ctrl+U \u64a4\u9500\u4e0a\u4e00\u4e2a\u5149\u6807 Shift+Alt+I \u5728\u9009\u4e2d\u884c\u7684\u884c\u5c3e\u63d2\u5165\u5149\u6807 Ctrl+I \u9009\u62e9\u5f53\u524d\u884c Ctrl+Shift+L \u9009\u62e9\u5f53\u524d\u9009\u4e2d\u9879\u7684\u6240\u6709\u5339\u914d\u9879 Ctrl+F2 \u9009\u62e9\u5f53\u524d\u5355\u8bcd\u7684\u6240\u6709\u5339\u914d\u9879 Shift+Alt+\u2192 \u6269\u5c55\u9009\u62e9 Shift+Alt+\u2190 \u7f29\u5c0f\u9009\u62e9 Shift+Alt + (drag mouse) \u5217\uff08\u6846\uff09\u9009\u62e9 Ctrl+Shift+Alt + (arrow key) \u5217\uff08\u6846\uff09\u9009\u62e9 Ctrl+Shift+Alt +PgUp\u6216PgDown \u5411\u4e0a\u9875\u6216\u4e0b\u9875\u5217\uff08\u6846\uff09\u9009\u62e9 \u5bcc\u8bed\u8a00\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+Space \u6253\u5f00\u5efa\u8bae Ctrl+Shift+Space \u6253\u5f00\u53c2\u6570\u63d0\u793a Tab Emmet \u5c55\u5f00\u7f29\u5199 Shift+Alt+F \u683c\u5f0f\u5316\u6587\u6863 Ctrl+K Ctrl+F \u683c\u5f0f\u5316\u9009\u62e9\u533a\u57df F12 \u8df3\u8f6c\u5230\u5b9a\u4e49 Alt+F12 \u6253\u5f00\u7a97\u53e3\u663e\u793a\u5b9a\u4e49 Ctrl+K F12 \u6253\u5f00\u4fa7\u8fb9\u680f\u663e\u793a\u5b9a\u4e49 Ctrl+. \u5feb\u901f\u89e3\u51b3 Shift+F12 \u663e\u793a\u5f15\u7528 F2 \u91cd\u547d\u540d\u7b26\u53f7 Ctrl+Shift+ . \u6216 , \u66ff\u6362\u4e3a\u4e0b\u4e00\u4e2a\u6216\u4e0a\u4e00\u4e2a\u503c Ctrl+K Ctrl+X \u5220\u9664\u884c\u5c3e\u7a7a\u683c Ctrl+K M \u66f4\u6539\u6587\u672c\u8bed\u8a00 \u7f16\u8f91\u7ba1\u7406\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+F4, Ctrl+W \u5173\u95ed\u7f16\u8f91\u7684\u6587\u4ef6 Ctrl+K F \u5173\u95ed\u6587\u4ef6\u5939 Ctrl+\\ \u62c6\u5206\u7f16\u8f91\u5668\u7a97\u53e3 Ctrl+ 1 \u6216 2 \u6216 3 \u5207\u6362\u5230\u7b2c\u4e00\u3001\u7b2c\u4e8c\u6216\u7b2c\u4e09\u4e2a\u7a97\u53e3 Ctrl+K Ctrl+ \u2190\u6216\u2192 \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6216\u4e0b\u4e00\u4e2a\u7a97\u53e3 Ctrl+Shift+PgUp \u6216PgDown \u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u7f16\u8f91\u7684\u6587\u4ef6 Ctrl+K \u2190 \u6216 \u2192 \u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u7f16\u8f91\u7a97\u53e3","title":"Building Tools"},{"location":"building_tools/#_1","text":"Windows \u7f16\u8bd1\u5de5\u5177 Microsoft Studio 2017 \u7f16\u8bd1\u5feb\u6377\u952e \u5feb\u6377\u952e \u4f5c\u7528 Ctrl+F5 \u7f16\u8bd1\u3001\u8fd0\u884c F5 Debug Alt+g \u67e5\u770b\u53cd\u7f16\u8bd1 vscode \u5feb\u6377\u952e \u901a\u7528\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+Shift+P, F1 \u6253\u5f00\u547d\u4ee4\u9762\u677f Ctrl+P \u5feb\u901f\u6253\u5f00\u6587\u4ef6 Ctrl+Shift+N \u6253\u5f00\u65b0\u7a97\u53e3\u6216\u5b9e\u4f8b Ctrl+Shift+W \u5173\u95ed\u7a97\u53e3\u6216\u5b9e\u4f8b \u57fa\u7840\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+X \u526a\u5207\u5f53\u524d\u884c Ctrl+C \u590d\u5236\u5f53\u524d\u884c Alt+ \u2191 \u6216 \u2193 \u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a8\u5f53\u524d\u884c Shift+Alt + \u2193 \u6216 \u2191 \u5411\u4e0a\u6216\u5411\u4e0b\u590d\u5236\u5f53\u524d\u884c Ctrl+Shift+K \u5220\u9664\u5f53\u524d\u884c Ctrl+Enter \u5728\u5f53\u524d\u884c\u4ee5\u4e0b\u63d2\u5165 Ctrl+Shift+Enter \u5728\u5f53\u524d\u884c\u4ee5\u4e0a\u63d2\u5165 Ctrl+Shift+\\ \u8df3\u8f6c\u5230\u5339\u914d\u7684\u62ec\u53f7 Ctrl+] \u6216 [ \u7f29\u8fdb\u6216\u53d6\u6d88\u7f29\u8fdb Home \u8f6c\u5230\u884c\u9996 End \u8f6c\u5230\u884c\u5c3e Ctrl+Home \u8f6c\u5230\u9875\u9996 Ctrl+End \u8f6c\u5230\u9875\u5c3e Ctrl+\u2191 \u6216 \u2193 \u5411\u4e0a\u6216\u5411\u4e0b\u6eda\u52a8 Alt+PgUp \u6216 PgDown \u5411\u4e0a\u6216\u5411\u4e0b\u7ffb\u9875 Ctrl+Shift+[ \u6298\u53e0\u5f53\u524d\u4ee3\u7801\u5757 Ctrl+Shift+] \u5c55\u5f00\u5f53\u524d\u4ee3\u7801\u5757 Ctrl+K Ctrl+[ \u6298\u53e0\u6240\u6709\u5b50\u4ee3\u7801\u5757 Ctrl+K Ctrl+] \u5c55\u5f00\u6240\u6709\u5b50\u4ee3\u7801\u5757 Ctrl+K Ctrl+0 \u6298\u53e0\u6240\u6709\u4ee3\u7801\u5757 Ctrl+K Ctrl+J \u5c55\u5f00\u6240\u6709\u4ee3\u7801\u5757 Ctrl+K Ctrl+C \u6dfb\u52a0\u884c\u6ce8\u91ca Ctrl+K Ctrl+U \u5220\u9664\u884c\u6ce8\u91ca Ctrl+\u6216 \u6dfb\u52a0\u6216\u5220\u9664\u884c\u6ce8\u91ca Shift+Alt+A \u6dfb\u52a0\u6216\u5220\u9664\u5757\u6ce8\u91ca Alt+Z \u81ea\u52a8\u6362\u884c \u5bfc\u822a\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+T \u663e\u793a\u6240\u6709\u7b26\u53f7 Ctrl+G \u8df3\u8f6c\u5230\u884c Ctrl+P \u8df3\u8f6c\u5230\u6587\u4ef6 Ctrl+Shift+O \u8df3\u8f6c\u5230\u7b26\u53f7 Ctrl+Shift+M \u663e\u793a\u95ee\u9898\u9762\u677f F8 \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u95ee\u9898\u6216\u8b66\u544a Shift+F8 \u8df3\u8f6c\u5230\u524d\u4e00\u4e2a\u95ee\u9898\u6216\u8b66\u544a Ctrl+Shift+Tab \u663e\u793a\u7f16\u8f91\u5668\u6587\u4ef6\u5386\u53f2 Alt+ \u2190 \u6216 \u2192 \u5411\u540e\u6216\u5411\u524d\u67e5\u770b\u6587\u4ef6 Ctrl+M \u5f00\u542f\u6216\u5173\u95ed Tab \u79fb\u52a8\u7126\u70b9 \u641c\u7d22\u548c\u66ff\u6362\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+F \u67e5\u627e Ctrl+H \u66ff\u6362 F3 \u6216 Shift+F3 \u67e5\u627e\u4e0b\u4e00\u4e2a\u6216\u524d\u4e00\u4e2a Alt+Enter \u9009\u62e9\u6240\u6709\u5339\u914d\u9879 Ctrl+D \u9009\u62e9\u4e0b\u4e00\u4e2a\u5339\u914d\u9879 Ctrl+K Ctrl+D \u8df3\u8fc7\u5f53\u524d\u9009\u62e9\u9879 Alt+C \u6216 R \u6216 W \u5207\u6362\u5927\u5c0f\u5199\u654f\u611f\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u6216\u5168\u8bcd \u591a\u5149\u6807\u4e0e\u9009\u62e9\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Alt+Click \u63d2\u5165\u5149\u6807 Ctrl+Alt+ \u2191 \u6216 \u2193 \u5411\u4e0a\u6216\u5411\u4e0b\u63d2\u5165\u5149\u6807 Ctrl+U \u64a4\u9500\u4e0a\u4e00\u4e2a\u5149\u6807 Shift+Alt+I \u5728\u9009\u4e2d\u884c\u7684\u884c\u5c3e\u63d2\u5165\u5149\u6807 Ctrl+I \u9009\u62e9\u5f53\u524d\u884c Ctrl+Shift+L \u9009\u62e9\u5f53\u524d\u9009\u4e2d\u9879\u7684\u6240\u6709\u5339\u914d\u9879 Ctrl+F2 \u9009\u62e9\u5f53\u524d\u5355\u8bcd\u7684\u6240\u6709\u5339\u914d\u9879 Shift+Alt+\u2192 \u6269\u5c55\u9009\u62e9 Shift+Alt+\u2190 \u7f29\u5c0f\u9009\u62e9 Shift+Alt + (drag mouse) \u5217\uff08\u6846\uff09\u9009\u62e9 Ctrl+Shift+Alt + (arrow key) \u5217\uff08\u6846\uff09\u9009\u62e9 Ctrl+Shift+Alt +PgUp\u6216PgDown \u5411\u4e0a\u9875\u6216\u4e0b\u9875\u5217\uff08\u6846\uff09\u9009\u62e9 \u5bcc\u8bed\u8a00\u7f16\u8f91\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+Space \u6253\u5f00\u5efa\u8bae Ctrl+Shift+Space \u6253\u5f00\u53c2\u6570\u63d0\u793a Tab Emmet \u5c55\u5f00\u7f29\u5199 Shift+Alt+F \u683c\u5f0f\u5316\u6587\u6863 Ctrl+K Ctrl+F \u683c\u5f0f\u5316\u9009\u62e9\u533a\u57df F12 \u8df3\u8f6c\u5230\u5b9a\u4e49 Alt+F12 \u6253\u5f00\u7a97\u53e3\u663e\u793a\u5b9a\u4e49 Ctrl+K F12 \u6253\u5f00\u4fa7\u8fb9\u680f\u663e\u793a\u5b9a\u4e49 Ctrl+. \u5feb\u901f\u89e3\u51b3 Shift+F12 \u663e\u793a\u5f15\u7528 F2 \u91cd\u547d\u540d\u7b26\u53f7 Ctrl+Shift+ . \u6216 , \u66ff\u6362\u4e3a\u4e0b\u4e00\u4e2a\u6216\u4e0a\u4e00\u4e2a\u503c Ctrl+K Ctrl+X \u5220\u9664\u884c\u5c3e\u7a7a\u683c Ctrl+K M \u66f4\u6539\u6587\u672c\u8bed\u8a00 \u7f16\u8f91\u7ba1\u7406\u5feb\u6377\u952e \u4f5c\u7528 Ctrl+F4, Ctrl+W \u5173\u95ed\u7f16\u8f91\u7684\u6587\u4ef6 Ctrl+K F \u5173\u95ed\u6587\u4ef6\u5939 Ctrl+\\ \u62c6\u5206\u7f16\u8f91\u5668\u7a97\u53e3 Ctrl+ 1 \u6216 2 \u6216 3 \u5207\u6362\u5230\u7b2c\u4e00\u3001\u7b2c\u4e8c\u6216\u7b2c\u4e09\u4e2a\u7a97\u53e3 Ctrl+K Ctrl+ \u2190\u6216\u2192 \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6216\u4e0b\u4e00\u4e2a\u7a97\u53e3 Ctrl+Shift+PgUp \u6216PgDown \u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u7f16\u8f91\u7684\u6587\u4ef6 Ctrl+K \u2190 \u6216 \u2192 \u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u7f16\u8f91\u7a97\u53e3","title":"\u7f16\u8bd1"},{"location":"default_parameters/","text":"C++\u9ed8\u8ba4\u53c2\u6570 \uf0c1 C++ \u5141\u8bb8\u51fd\u6570\u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570\uff0c\u5728\u8c03\u7528\u65f6\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u7701\u7565\u53c2\u6570\u3002\u89c4\u5219\u5982\u4e0b\uff1a \u9ed8\u8ba4\u53c2\u6570\u53ea\u80fd\u6309\u7167\u4ece\u6700\u53f3\u5230\u5de6\u7684\u987a\u5e8f\uff0c\u5e76\u4e14\u662f\u8fde\u7eed\u7684\uff0c\u4e0d\u80fd\u51fa\u73b0\u9ed8\u8ba4\u53c2\u6570\u548c\u975e\u9ed8\u8ba4\u53c2\u6570\u8fdb\u884c\u4ea4\u53c9\u7684\u683c\u5f0f\u3002 \u5982\u679c\u51fd\u6570\u540c\u65f6\u6709\u58f0\u660e\u548c\u5b9e\u73b0\uff0c\u53c2\u6570\u53ea\u80fd\u653e\u5728\u51fd\u6570\u58f0\u660e\u4e2d\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff1a\u91cd\u590d\u5b9a\u4e49\u3002 \u9ed8\u8ba4\u53c2\u6570\u53ef\u4ee5\u662f\u5e38\u91cf\u3001\u5168\u5c40\u7b26\u53f7\uff08\u5168\u5c40\u53d8\u91cf\u3001\u51fd\u6570\u540d\uff09\u3002 Note C\u8bed\u8a00\u4e0d\u5b58\u5728\u9ed8\u8ba4\u53c2\u6570 \u51fd\u6570\u91cd\u8f7d\u3001\u9ed8\u8ba4\u53c2\u6570\u53ef\u80fd\u4f1a\u4ea7\u751f\u51b2\u7a81\u3001\u4e8c\u4e49\u6027\uff08\u5efa\u8bae\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\uff09 #include <iostream> void test(int a, int b = 9) { std::cout << \"void test(int a, int b = 9)\" << std::endl; } void test(int a) { std::cout << \"void test(int a)\" << std::endl; } int main() { test(a); //\u4ea7\u751f\u4e86\u4e8c\u4e49\u6027 retrun 0; } Demo\u4ee5\u53caC++\u9ed8\u8ba4\u53c2\u6570\u672c\u8d28(\u6c47\u7f16) \uf0c1 #include <iostream> int sum(int value1 =3, int value2 =5) { return value1 + value2; } int gValue = 9; int sum2(int value1 = gValue, int value2 = 0) { return value1 + value2; } void test(int a) { std::cout << \"test(int) - \" << a << std::endl; } //\u51fd\u6570\u6307\u9488\u521d\u59cb\u5316 void func(int v1, void(*p)(int) = test) { p(v1); } void test(int a = 0, int b = 9); int main(int argc, char **argv) { sum(); sum(6); func(7); test(); return 0; } void test(int a, int b) { std::cout << \"a+b: \" << a + b << std::endl; } \u5206\u6790 \uf0c1 sum() \u548c sum(6) \u5728\u6c47\u7f16\u4e2d\u7684\u7ed3\u679c\u5bf9\u6bd4,\u5b9e\u73b0\u6ca1\u6709\u4e0d\u540c\uff0c\u4ece\u6c47\u7f16\u4e0a\u770b\u4ed6\u4eec\u7684\u672c\u8d28\u5b8c\u5168\u4e00\u6837\u3002 30: sum(); 01182798 6A 05 push 5 0118279A 6A 03 push 3 0118279C E8 FF E8 FF FF call sum (011810A0h) 011827A1 83 C4 08 add esp,8 31: sum(6); 011827A4 6A 05 push 5 31: sum(6); 011827A6 6A 06 push 6 011827A8 E8 F3 E8 FF FF call sum (011810A0h) 011827AD 83 C4 08 add esp,8 \u51fd\u6570\u6307\u9488\u548c\u6307\u9488\u51fd\u6570\u7684\u533a\u5206 \u6307\u9488\u51fd\u6570\uff0c\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u6307\u9488\u7684\u51fd\u6570\uff0c\u5176\u672c\u8d28\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u9488\u3002\u58f0\u660e\u683c\u5f0f\u4e3a\uff1a* \u7c7b\u578b\u6807\u8bc6\u7b26 \u51fd\u6570\u540d(\u53c2\u6570\u8868) \u51fd\u6570\u6307\u9488\uff0c\u5176\u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u8be5\u6307\u9488\u6307\u5411\u8fd9\u4e2a\u51fd\u6570\u3002\u603b\u7ed3\u6765\u8bf4\uff0c\u51fd\u6570\u6307\u9488\u5c31\u662f\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002\u58f0\u660e\u683c\u5f0f\uff1a\u7c7b\u578b\u8bf4\u660e\u7b26 (*\u51fd\u6570\u540d) (\u53c2\u6570) #include<iostream> typedef struct _Data{ int a; int b; }Data; //\u6307\u9488\u51fd\u6570 Data* f(int a,int b){ Data * data = new Data; data->a = a; data->b = b; return data; } int main(int argc, char *argv[]) { //\u8c03\u7528\u6307\u9488\u51fd\u6570 Data * myData = f(4,5); std::cout << \"f(4,5) = \" << myData->a << myData->b << std::endl; delete myData; return 0; } #include <iostream> int add(int x,int y){ return x+y; } int sub(int x,int y){ return x-y; } //\u51fd\u6570\u6307\u9488 int (*fun)(int x,int y); int main(int argc, char *argv[]) { //\u7b2c\u4e00\u79cd\u5199\u6cd5 fun = add; std::cout << \"(*fun)(1,2) = \" << (*fun)(1,2) ; //\u7b2c\u4e8c\u79cd\u5199\u6cd5 fun = &sub; std::cout << \"(*fun)(5,3) = \" << (*fun)(5,3) << fun(5,3)\uff1b return 0; }","title":"Default parameters"},{"location":"default_parameters/#c","text":"C++ \u5141\u8bb8\u51fd\u6570\u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570\uff0c\u5728\u8c03\u7528\u65f6\u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u7701\u7565\u53c2\u6570\u3002\u89c4\u5219\u5982\u4e0b\uff1a \u9ed8\u8ba4\u53c2\u6570\u53ea\u80fd\u6309\u7167\u4ece\u6700\u53f3\u5230\u5de6\u7684\u987a\u5e8f\uff0c\u5e76\u4e14\u662f\u8fde\u7eed\u7684\uff0c\u4e0d\u80fd\u51fa\u73b0\u9ed8\u8ba4\u53c2\u6570\u548c\u975e\u9ed8\u8ba4\u53c2\u6570\u8fdb\u884c\u4ea4\u53c9\u7684\u683c\u5f0f\u3002 \u5982\u679c\u51fd\u6570\u540c\u65f6\u6709\u58f0\u660e\u548c\u5b9e\u73b0\uff0c\u53c2\u6570\u53ea\u80fd\u653e\u5728\u51fd\u6570\u58f0\u660e\u4e2d\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff1a\u91cd\u590d\u5b9a\u4e49\u3002 \u9ed8\u8ba4\u53c2\u6570\u53ef\u4ee5\u662f\u5e38\u91cf\u3001\u5168\u5c40\u7b26\u53f7\uff08\u5168\u5c40\u53d8\u91cf\u3001\u51fd\u6570\u540d\uff09\u3002 Note C\u8bed\u8a00\u4e0d\u5b58\u5728\u9ed8\u8ba4\u53c2\u6570 \u51fd\u6570\u91cd\u8f7d\u3001\u9ed8\u8ba4\u53c2\u6570\u53ef\u80fd\u4f1a\u4ea7\u751f\u51b2\u7a81\u3001\u4e8c\u4e49\u6027\uff08\u5efa\u8bae\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\uff09 #include <iostream> void test(int a, int b = 9) { std::cout << \"void test(int a, int b = 9)\" << std::endl; } void test(int a) { std::cout << \"void test(int a)\" << std::endl; } int main() { test(a); //\u4ea7\u751f\u4e86\u4e8c\u4e49\u6027 retrun 0; }","title":"C++\u9ed8\u8ba4\u53c2\u6570"},{"location":"default_parameters/#democ","text":"#include <iostream> int sum(int value1 =3, int value2 =5) { return value1 + value2; } int gValue = 9; int sum2(int value1 = gValue, int value2 = 0) { return value1 + value2; } void test(int a) { std::cout << \"test(int) - \" << a << std::endl; } //\u51fd\u6570\u6307\u9488\u521d\u59cb\u5316 void func(int v1, void(*p)(int) = test) { p(v1); } void test(int a = 0, int b = 9); int main(int argc, char **argv) { sum(); sum(6); func(7); test(); return 0; } void test(int a, int b) { std::cout << \"a+b: \" << a + b << std::endl; }","title":"Demo\u4ee5\u53caC++\u9ed8\u8ba4\u53c2\u6570\u672c\u8d28(\u6c47\u7f16)"},{"location":"default_parameters/#_1","text":"sum() \u548c sum(6) \u5728\u6c47\u7f16\u4e2d\u7684\u7ed3\u679c\u5bf9\u6bd4,\u5b9e\u73b0\u6ca1\u6709\u4e0d\u540c\uff0c\u4ece\u6c47\u7f16\u4e0a\u770b\u4ed6\u4eec\u7684\u672c\u8d28\u5b8c\u5168\u4e00\u6837\u3002 30: sum(); 01182798 6A 05 push 5 0118279A 6A 03 push 3 0118279C E8 FF E8 FF FF call sum (011810A0h) 011827A1 83 C4 08 add esp,8 31: sum(6); 011827A4 6A 05 push 5 31: sum(6); 011827A6 6A 06 push 6 011827A8 E8 F3 E8 FF FF call sum (011810A0h) 011827AD 83 C4 08 add esp,8 \u51fd\u6570\u6307\u9488\u548c\u6307\u9488\u51fd\u6570\u7684\u533a\u5206 \u6307\u9488\u51fd\u6570\uff0c\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u6307\u9488\u7684\u51fd\u6570\uff0c\u5176\u672c\u8d28\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u9488\u3002\u58f0\u660e\u683c\u5f0f\u4e3a\uff1a* \u7c7b\u578b\u6807\u8bc6\u7b26 \u51fd\u6570\u540d(\u53c2\u6570\u8868) \u51fd\u6570\u6307\u9488\uff0c\u5176\u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u8be5\u6307\u9488\u6307\u5411\u8fd9\u4e2a\u51fd\u6570\u3002\u603b\u7ed3\u6765\u8bf4\uff0c\u51fd\u6570\u6307\u9488\u5c31\u662f\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002\u58f0\u660e\u683c\u5f0f\uff1a\u7c7b\u578b\u8bf4\u660e\u7b26 (*\u51fd\u6570\u540d) (\u53c2\u6570) #include<iostream> typedef struct _Data{ int a; int b; }Data; //\u6307\u9488\u51fd\u6570 Data* f(int a,int b){ Data * data = new Data; data->a = a; data->b = b; return data; } int main(int argc, char *argv[]) { //\u8c03\u7528\u6307\u9488\u51fd\u6570 Data * myData = f(4,5); std::cout << \"f(4,5) = \" << myData->a << myData->b << std::endl; delete myData; return 0; } #include <iostream> int add(int x,int y){ return x+y; } int sub(int x,int y){ return x-y; } //\u51fd\u6570\u6307\u9488 int (*fun)(int x,int y); int main(int argc, char *argv[]) { //\u7b2c\u4e00\u79cd\u5199\u6cd5 fun = add; std::cout << \"(*fun)(1,2) = \" << (*fun)(1,2) ; //\u7b2c\u4e8c\u79cd\u5199\u6cd5 fun = &sub; std::cout << \"(*fun)(5,3) = \" << (*fun)(5,3) << fun(5,3)\uff1b return 0; }","title":"\u5206\u6790"},{"location":"externC/","text":"extern \"C\" \uf0c1 \u88ab extern \"C\" \u4fee\u9970\u7684\u4ee3\u7801\u4f1a\u6309\u7167C\u8bed\u8a00\u7684\u65b9\u5f0f\u53bb\u7f16\u8bd1\u3002 \u5982\u679c\u51fd\u6570\u540c\u65f6\u6709\u58f0\u660e\u548c\u5b9e\u73b0\uff0c\u8981\u8ba9\u51fd\u6570\u58f0\u660e\u88ab extern \"C\" \u4fee\u9970\uff0c\u51fd\u6570\u5b9e\u73b0\u53ef\u4ee5\u4e0d\u4fee\u9970\u3002 \u5982\u679c *.c \u5bf9\u5e94\u7684 *.h \u58f0\u660e\u51fd\u6570\u52a0\u4e86 extern \"C\" \uff0c\u7531\u4e8eC\u8bed\u8a00\u662f\u4e0d\u8ba4\u8bc6 extern \"C\" \u5173\u952e\u5b57\uff0c\u4f1a\u51fa\u73b0\u5176\u4ed6 *.c \u6587\u4ef6\u5f15\u7528\u58f0\u660e\u4e86 extern \"C\" \u7684 *.c \u6587\u4ef6\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u6240\u4ee5\u5f15\u7528\u4e86 #ifdef __cplusplus #program once #ifdef __cplusplus extern \"C\" { #endif // __cplusplus int sum(int value, int value2); #ifdef __cplusplus } #endif // __cplusplus Note \u9632\u6b62\u91cd\u590d\u5305\u542b\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528 #ifndef , #ifdef , #endif \u6216\u8005 #program once ,\u4f46\u662f #program once \u4e0d\u662f\u9002\u7528\u4e8e\u6240\u6709\u7684\u7f16\u8bd1\u5668\u3002","title":"externC"},{"location":"externC/#extern-c","text":"\u88ab extern \"C\" \u4fee\u9970\u7684\u4ee3\u7801\u4f1a\u6309\u7167C\u8bed\u8a00\u7684\u65b9\u5f0f\u53bb\u7f16\u8bd1\u3002 \u5982\u679c\u51fd\u6570\u540c\u65f6\u6709\u58f0\u660e\u548c\u5b9e\u73b0\uff0c\u8981\u8ba9\u51fd\u6570\u58f0\u660e\u88ab extern \"C\" \u4fee\u9970\uff0c\u51fd\u6570\u5b9e\u73b0\u53ef\u4ee5\u4e0d\u4fee\u9970\u3002 \u5982\u679c *.c \u5bf9\u5e94\u7684 *.h \u58f0\u660e\u51fd\u6570\u52a0\u4e86 extern \"C\" \uff0c\u7531\u4e8eC\u8bed\u8a00\u662f\u4e0d\u8ba4\u8bc6 extern \"C\" \u5173\u952e\u5b57\uff0c\u4f1a\u51fa\u73b0\u5176\u4ed6 *.c \u6587\u4ef6\u5f15\u7528\u58f0\u660e\u4e86 extern \"C\" \u7684 *.c \u6587\u4ef6\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u6240\u4ee5\u5f15\u7528\u4e86 #ifdef __cplusplus #program once #ifdef __cplusplus extern \"C\" { #endif // __cplusplus int sum(int value, int value2); #ifdef __cplusplus } #endif // __cplusplus Note \u9632\u6b62\u91cd\u590d\u5305\u542b\u6211\u4eec\u7ecf\u5e38\u4f7f\u7528 #ifndef , #ifdef , #endif \u6216\u8005 #program once ,\u4f46\u662f #program once \u4e0d\u662f\u9002\u7528\u4e8e\u6240\u6709\u7684\u7f16\u8bd1\u5668\u3002","title":"extern \"C\""},{"location":"inline/","text":"\u5185\u8054\u51fd\u6570inline \uf0c1 \u4f7f\u7528inline\u4fee\u9970\u51fd\u6570\u7684\u58f0\u660e\u6216\u8005\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u5176\u53d8\u6210\u5185\u8054\u51fd\u6570 \u5efa\u8bae\u58f0\u660e\u548c\u5b9e\u73b0\u90fd\u589e\u52a0inline\u4fee\u9970 \u7279\u70b9 \u7f16\u8bd1\u5668\u4f1a\u5c06\u51fd\u6570\u8c03\u7528\u76f4\u63a5\u5c55\u5f00\u4e3a\u51fd\u6570\u4f53\u4ee3\u7801 \u53ef\u4ee5\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500(\u8c03\u7528\u51fd\u6570\u9700\u8981\u5f00\u8f9f\u6808\u7a7a\u95f4\uff0c\u8c03\u7528\u7ed3\u675f\u4e4b\u540e\u8fd8\u9700\u8981\u56de\u6536\u6808\u7a7a\u95f4) \u4f1a\u589e\u5927\u4ee3\u7801\u4f53\u79ef \u6ce8\u610f \u5c3d\u91cf\u4e0d\u8981\u5185\u8054\u8d85\u8fc710\u884c\u4ee3\u7801\u7684\u51fd\u6570 \u6709\u4e9b\u51fd\u6570\u5373\u4f7f\u58f0\u660e\u4e3ainline\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u7f16\u8bd1\u5668\u5185\u8054\uff0c\u6bd4\u5982\u9012\u5f52\u51fd\u6570 \u4f7f\u7528\u8303\u56f4\uff1a\u4ee3\u7801\u4f53\u79ef\u4e0d\u5927\uff0c\u53cd\u590d\u8c03\u7528\u7684\u3002 inline \u548c #define \u5b8f\u90fd\u53ef\u4ee5\u51cf\u5c11\u5f00\u9500\u4f46\u662f\u5b58\u5728\u533a\u522b inline \u591a\u4e86\u8bed\u6cd5\u68c0\u6d4b\u548c\u51fd\u6570\u7279\u6027 \u7531\u4e8e #define \u662f\u76f4\u63a5\u66ff\u6362\u53ef\u80fd\u4e0d\u662f\u60f3\u8981\u7684\u7ed3\u679c void run() { run() } #define sum(x) (x+x) //result: 24 inline int sum(x) { return x + x; }//result:22 int a = 10; sum(++a); \u6c47\u7f16\u5b9e\u8d28 \uf0c1 \u4e0d\u52a0inline int sum(int v1, int v2) { return v1 + v2; } 39: int c =sum(4, 6); 00007FF6AE181034 BA 06 00 00 00 mov edx,6 00007FF6AE181039 B9 04 00 00 00 mov ecx,4 00007FF6AE18103E E8 BD FF FF FF call sum (07FF6AE181000h) 00007FF6AE181043 89 44 24 28 mov dword ptr [c],eax \u52a0inline inline int sum(int v1, int v2) { return v1 + v2; } 39: int c =sum(4, 6); 00007FF7A46A1014 B8 04 00 00 00 mov eax,4 00007FF7A46A1019 83 C0 06 add eax,6 00007FF7A46A101C 89 44 24 28 mov dword ptr [c],eax \u6709inline\u4fee\u9970\u4e4b\u540e\u76f4\u63a5\u5c06\u8c03\u7528\u7684\u51fd\u6570\u62ff\u51fa\u6765\uff0c\u4e0d\u4f1a\u53bb\u8c03\u7528sum\u51fd\u6570\u4e86","title":"inline"},{"location":"inline/#inline","text":"\u4f7f\u7528inline\u4fee\u9970\u51fd\u6570\u7684\u58f0\u660e\u6216\u8005\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u5176\u53d8\u6210\u5185\u8054\u51fd\u6570 \u5efa\u8bae\u58f0\u660e\u548c\u5b9e\u73b0\u90fd\u589e\u52a0inline\u4fee\u9970 \u7279\u70b9 \u7f16\u8bd1\u5668\u4f1a\u5c06\u51fd\u6570\u8c03\u7528\u76f4\u63a5\u5c55\u5f00\u4e3a\u51fd\u6570\u4f53\u4ee3\u7801 \u53ef\u4ee5\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500(\u8c03\u7528\u51fd\u6570\u9700\u8981\u5f00\u8f9f\u6808\u7a7a\u95f4\uff0c\u8c03\u7528\u7ed3\u675f\u4e4b\u540e\u8fd8\u9700\u8981\u56de\u6536\u6808\u7a7a\u95f4) \u4f1a\u589e\u5927\u4ee3\u7801\u4f53\u79ef \u6ce8\u610f \u5c3d\u91cf\u4e0d\u8981\u5185\u8054\u8d85\u8fc710\u884c\u4ee3\u7801\u7684\u51fd\u6570 \u6709\u4e9b\u51fd\u6570\u5373\u4f7f\u58f0\u660e\u4e3ainline\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u7f16\u8bd1\u5668\u5185\u8054\uff0c\u6bd4\u5982\u9012\u5f52\u51fd\u6570 \u4f7f\u7528\u8303\u56f4\uff1a\u4ee3\u7801\u4f53\u79ef\u4e0d\u5927\uff0c\u53cd\u590d\u8c03\u7528\u7684\u3002 inline \u548c #define \u5b8f\u90fd\u53ef\u4ee5\u51cf\u5c11\u5f00\u9500\u4f46\u662f\u5b58\u5728\u533a\u522b inline \u591a\u4e86\u8bed\u6cd5\u68c0\u6d4b\u548c\u51fd\u6570\u7279\u6027 \u7531\u4e8e #define \u662f\u76f4\u63a5\u66ff\u6362\u53ef\u80fd\u4e0d\u662f\u60f3\u8981\u7684\u7ed3\u679c void run() { run() } #define sum(x) (x+x) //result: 24 inline int sum(x) { return x + x; }//result:22 int a = 10; sum(++a);","title":"\u5185\u8054\u51fd\u6570inline"},{"location":"inline/#_1","text":"\u4e0d\u52a0inline int sum(int v1, int v2) { return v1 + v2; } 39: int c =sum(4, 6); 00007FF6AE181034 BA 06 00 00 00 mov edx,6 00007FF6AE181039 B9 04 00 00 00 mov ecx,4 00007FF6AE18103E E8 BD FF FF FF call sum (07FF6AE181000h) 00007FF6AE181043 89 44 24 28 mov dword ptr [c],eax \u52a0inline inline int sum(int v1, int v2) { return v1 + v2; } 39: int c =sum(4, 6); 00007FF7A46A1014 B8 04 00 00 00 mov eax,4 00007FF7A46A1019 83 C0 06 add eax,6 00007FF7A46A101C 89 44 24 28 mov dword ptr [c],eax \u6709inline\u4fee\u9970\u4e4b\u540e\u76f4\u63a5\u5c06\u8c03\u7528\u7684\u51fd\u6570\u62ff\u51fa\u6765\uff0c\u4e0d\u4f1a\u53bb\u8c03\u7528sum\u51fd\u6570\u4e86","title":"\u6c47\u7f16\u5b9e\u8d28"},{"location":"overload_function/","text":"C++ \u51fd\u6570\u91cd\u8f7d \uf0c1 \u89c4\u5219 \u51fd\u6570\u540d\u76f8\u540c \u53c2\u6570\u7684\u4e2a\u6570\u4e0d\u540c\u3001\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u540c\u3001\u53c2\u6570\u987a\u5e8f\u4e0d\u540c\uff08\u6ee1\u8db3\u5176\u4e00\u5373\u53ef\uff09 \u6ce8\u610f \u8fd4\u56de\u503c\u7c7b\u578b\u4e0e\u51fd\u6570\u91cd\u8f7d\u6ca1\u6709\u5173\u7cfb \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5b9e\u53c2\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e8c\u4e49\u6027 \u672c\u8d28 \u91c7\u7528 name mangling \u6216\u8005\u53eb name decoration \u6280\u672f Note C++\u7f16\u8bd1\u5668\u4f1a\u9ed8\u8ba4\u5bf9\u7b26\u53f7\u540d\uff08\u51fd\u6570\u540d\uff09\u8fdb\u884c\u6539\u7f16\u3001\u4fee\u9970\uff0c\u6709\u4e9b\u5730\u65b9\u7ffb\u8bd1\u4e3a\"\u547d\u540d\u503e\u8f67\" C\u8bed\u8a00\u4e0d\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d Demo\u4ee5\u53ca\u6c47\u7f16\u67e5\u770b\u5982\u4f55\u5b9e\u73b0 \uf0c1 #include <iostream> void function() { std::cout << \"fuction()\" << std::endl; }; void function(double inputValue) { std::cout << \"function(double a)\" << inputValue <<std::endl; } void function(float inputValue) { std::cout << \"function(float a)\" << inputValue << std::endl; } int main(int argc, char** argv) { function(); function(10.0); function(10.0f); return 0; } 17: 18: int main(int argc, char** argv) 19: { 00362810 55 push ebp 00362811 8B EC mov ebp,esp 00362813 81 EC C0 00 00 00 sub esp,0C0h 00362819 53 push ebx 0036281A 56 push esi 0036281B 57 push edi 0036281C 8D BD 40 FF FF FF lea edi,[ebp-0C0h] 00362822 B9 30 00 00 00 mov ecx,30h 00362827 B8 CC CC CC CC mov eax,0CCCCCCCCh 0036282C F3 AB rep stos dword ptr es:[edi] 0036282E B9 27 F0 36 00 mov ecx,offset _D37E0FB1_main@cpp (036F027h) 00362833 E8 4D EA FF FF call @__CheckForDebuggerJustMyCode@4 (0361285h) 20: function(); 00362838 E8 F5 E7 FF FF call function (0361032h) 21: function(10.0); 0036283D 83 EC 08 sub esp,8 00362840 F2 0F 10 05 70 9B 36 00 movsd xmm0,mmword ptr [__real@4024000000000000 (0369B70h)] 00362848 F2 0F 11 04 24 movsd mmword ptr [esp],xmm0 0036284D E8 6A EA FF FF call function (03612BCh) 00362852 83 C4 08 add esp,8 22: function(10.0f); 00362855 51 push ecx 00362856 F3 0F 10 05 7C 9B 36 00 movss xmm0,dword ptr [__real@41200000 (0369B7Ch)] 0036285E F3 0F 11 04 24 movss dword ptr [esp],xmm0 00362863 E8 18 EA FF FF call function (0361280h) 00362868 83 C4 04 add esp,4 23: return 0; 0036286B 33 C0 xor eax,eax 24: } \u5206\u6790\u6c47\u7f16 \uf0c1 \u51fd\u6570\u91cd\u8f7d\u7684\u5b9e\u73b0\u662f\u901a\u8fc7name mangling\u5b9e\u73b0\u7684\u53ef\u4ee5\u89c2\u5bdf\u6c47\u7f16\u4e2d\u7684function(\u5185\u5b58\u5730\u5740)\uff0c\u5176\u5185\u5b58\u5730\u5740\u662f\u4e0d\u76f8\u540c\u7684\u3002 E8 F5 E7 FF FF call function (0361032h) \u4e2d\u7684\u5730\u5740 E8 \u8868\u793a\u7684\u662f\u8c03\u7528\u51fd\u6570\uff0c\u4ed4\u7ec6\u7814\u7a76Iter\u673a\u5668\u7801\u767d\u76ae\u4e66\u91cc\u9762\u6709\u5b9a\u4e49\u3002 E8 4D EA FF FF + E8 F5 E7 FF FF \u673a\u5668\u7801\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684\uff0c\u5176\u5185\u5b58\u5730\u5740\u662f\u8fde\u7eed\u7684\u4e0d\u4f1a\u6d6a\u8d39\u5185\u5b58 00362833 + 00362838 (\u6ce8\uff1a8\u4f4d(0\uff0c1)=1\u5b57\u8282\uff0c\u6b63\u597d\u4e24\u4e2a\u5341\u516d\u4f4d\u4ee3\u88688\u4e2a0\uff0c1\u6570\u5b57\u5e8f\u5217\u662f1\u4e2a\u5b57\u8282\uff0c\u5185\u5b58\u5730\u5740\u4e2d\u95f4\u76f8\u5dee\u4e94\u4e2a\u5b57\u8282)","title":"Overload function"},{"location":"overload_function/#c","text":"\u89c4\u5219 \u51fd\u6570\u540d\u76f8\u540c \u53c2\u6570\u7684\u4e2a\u6570\u4e0d\u540c\u3001\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u540c\u3001\u53c2\u6570\u987a\u5e8f\u4e0d\u540c\uff08\u6ee1\u8db3\u5176\u4e00\u5373\u53ef\uff09 \u6ce8\u610f \u8fd4\u56de\u503c\u7c7b\u578b\u4e0e\u51fd\u6570\u91cd\u8f7d\u6ca1\u6709\u5173\u7cfb \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5b9e\u53c2\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e8c\u4e49\u6027 \u672c\u8d28 \u91c7\u7528 name mangling \u6216\u8005\u53eb name decoration \u6280\u672f Note C++\u7f16\u8bd1\u5668\u4f1a\u9ed8\u8ba4\u5bf9\u7b26\u53f7\u540d\uff08\u51fd\u6570\u540d\uff09\u8fdb\u884c\u6539\u7f16\u3001\u4fee\u9970\uff0c\u6709\u4e9b\u5730\u65b9\u7ffb\u8bd1\u4e3a\"\u547d\u540d\u503e\u8f67\" C\u8bed\u8a00\u4e0d\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d","title":"C++ \u51fd\u6570\u91cd\u8f7d"},{"location":"overload_function/#demo","text":"#include <iostream> void function() { std::cout << \"fuction()\" << std::endl; }; void function(double inputValue) { std::cout << \"function(double a)\" << inputValue <<std::endl; } void function(float inputValue) { std::cout << \"function(float a)\" << inputValue << std::endl; } int main(int argc, char** argv) { function(); function(10.0); function(10.0f); return 0; } 17: 18: int main(int argc, char** argv) 19: { 00362810 55 push ebp 00362811 8B EC mov ebp,esp 00362813 81 EC C0 00 00 00 sub esp,0C0h 00362819 53 push ebx 0036281A 56 push esi 0036281B 57 push edi 0036281C 8D BD 40 FF FF FF lea edi,[ebp-0C0h] 00362822 B9 30 00 00 00 mov ecx,30h 00362827 B8 CC CC CC CC mov eax,0CCCCCCCCh 0036282C F3 AB rep stos dword ptr es:[edi] 0036282E B9 27 F0 36 00 mov ecx,offset _D37E0FB1_main@cpp (036F027h) 00362833 E8 4D EA FF FF call @__CheckForDebuggerJustMyCode@4 (0361285h) 20: function(); 00362838 E8 F5 E7 FF FF call function (0361032h) 21: function(10.0); 0036283D 83 EC 08 sub esp,8 00362840 F2 0F 10 05 70 9B 36 00 movsd xmm0,mmword ptr [__real@4024000000000000 (0369B70h)] 00362848 F2 0F 11 04 24 movsd mmword ptr [esp],xmm0 0036284D E8 6A EA FF FF call function (03612BCh) 00362852 83 C4 08 add esp,8 22: function(10.0f); 00362855 51 push ecx 00362856 F3 0F 10 05 7C 9B 36 00 movss xmm0,dword ptr [__real@41200000 (0369B7Ch)] 0036285E F3 0F 11 04 24 movss dword ptr [esp],xmm0 00362863 E8 18 EA FF FF call function (0361280h) 00362868 83 C4 04 add esp,4 23: return 0; 0036286B 33 C0 xor eax,eax 24: }","title":"Demo\u4ee5\u53ca\u6c47\u7f16\u67e5\u770b\u5982\u4f55\u5b9e\u73b0"},{"location":"overload_function/#_1","text":"\u51fd\u6570\u91cd\u8f7d\u7684\u5b9e\u73b0\u662f\u901a\u8fc7name mangling\u5b9e\u73b0\u7684\u53ef\u4ee5\u89c2\u5bdf\u6c47\u7f16\u4e2d\u7684function(\u5185\u5b58\u5730\u5740)\uff0c\u5176\u5185\u5b58\u5730\u5740\u662f\u4e0d\u76f8\u540c\u7684\u3002 E8 F5 E7 FF FF call function (0361032h) \u4e2d\u7684\u5730\u5740 E8 \u8868\u793a\u7684\u662f\u8c03\u7528\u51fd\u6570\uff0c\u4ed4\u7ec6\u7814\u7a76Iter\u673a\u5668\u7801\u767d\u76ae\u4e66\u91cc\u9762\u6709\u5b9a\u4e49\u3002 E8 4D EA FF FF + E8 F5 E7 FF FF \u673a\u5668\u7801\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684\uff0c\u5176\u5185\u5b58\u5730\u5740\u662f\u8fde\u7eed\u7684\u4e0d\u4f1a\u6d6a\u8d39\u5185\u5b58 00362833 + 00362838 (\u6ce8\uff1a8\u4f4d(0\uff0c1)=1\u5b57\u8282\uff0c\u6b63\u597d\u4e24\u4e2a\u5341\u516d\u4f4d\u4ee3\u88688\u4e2a0\uff0c1\u6570\u5b57\u5e8f\u5217\u662f1\u4e2a\u5b57\u8282\uff0c\u5185\u5b58\u5730\u5740\u4e2d\u95f4\u76f8\u5dee\u4e94\u4e2a\u5b57\u8282)","title":"\u5206\u6790\u6c47\u7f16"},{"location":"reference/","text":"\u5f15\u7528 \uf0c1 \u5728C\u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528\u6307\u9488\uff08Pointer\uff09\u53ef\u4ee5\u95f4\u63a5\u83b7\u53d6\u3001\u4fee\u6539\u67d0\u4e2a\u53d8\u91cf\u7684\u503c \u5728C++\u4e2d\uff0c\u4f7f\u7528\u5f15\u7528\uff08Reference\uff09\u53ef\u4ee5\u8d77\u5230\u8ddf\u6307\u9488\u7c7b\u4f3c\u7684\u529f\u80fd \u6ce8\u610f: \u5f15\u7528\u76f8\u5f53\u4e8e\u662f\u53d8\u91cf\u7684\u522b\u540d\uff08\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u679a\u4e3e\u3001\u7ed3\u6784\u4f53\u3001\u7c7b\u3001\u6307\u9488\u3001\u6570\u7ec4\u7b49\uff0c\u90fd\u53ef\u4ee5\u6709\u5f15\u7528\uff09 \u5bf9\u5f15\u7528\u505a\u8ba1\u7b97\uff0c\u5c31\u662f\u5bf9\u5f15\u7528\u6240\u6307\u5411\u7684\u53d8\u91cf\u505a\u8ba1\u7b97 \u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e00\u65e6\u6307\u5411\u4e86\u67d0\u4e2a\u53d8\u91cf\uff0c\u5c31\u4e0d\u53ef\u4ee5\u518d\u6539\u53d8\uff0c\u201c\u4ece\u4e00\u800c\u7ec8\u201d \u53ef\u4ee5\u5229\u7528\u5f15\u7528\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u5f15\u7528\uff0c\u76f8\u5f53\u4e8e\u67d0\u4e2a\u53d8\u91cf\u7684\u591a\u4e2a\u522b\u540d \u4e0d\u5b58\u5728[\u5f15\u7528\u7684\u5f15\u7528\u3001\u6307\u5411\u5f15\u7528\u7684\u6307\u9488\u3001\u5f15\u7528\u6570\u7ec4] \u5f15\u7528\u5b58\u5728\u7684\u4ef7\u503c\u4e4b\u4e00\uff1a\u6bd4\u6307\u9488\u66f4\u5b89\u5168\u3001\u51fd\u6570\u8fd4\u56de\u503c\u53ef\u4ee5\u88ab\u8d4b\u503c \u5f15\u7528\u7684\u672c\u8d28\u5c31\u662f\u6307\u9488\uff0c\u53ea\u662f\u7f16\u8bd1\u5668\u524a\u5f31\u4e86\u5b83\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u5f15\u7528\u5c31\u662f\u5f31\u5316\u4e86\u7684\u6307\u9488 \u4e00\u4e2a\u5f15\u7528\u5360\u7528\u4e00\u4e2a\u6307\u9488\u7684\u5927\u5c0f \u6c47\u7f16\u5206\u6790 \uf0c1 \u521d\u59cb\u5316\u5f15\u7528\u53d8\u91cf\u4ece\u4e00\u800c\u7ec8 int heading1 = 20; int heading2 = 9; int &refHeading = heading1; refHeading = heading2; //\u53ea\u662f\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u4e0d\u662f\u521b\u5efa\u5f15\u7528 \u53cd\u590d\u8c03\u7528 swap(int&,int&) \u51fd\u6570\u597d\u50cf\u4e0d\u7b26\u5408\"\u4ece\u4e00\u800c\u7ec8\"\u7684\u6982\u5ff5\u662f\u56e0\u4e3a\uff0c\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u6808\u7a7a\u95f4\uff0c\u6bcf\u4e00\u6b21\u8c03\u7528\u90fd\u4f1a\u91cd\u65b0\u521b\u5efa\u65b0\u7684\u5f15\u7528 void swap(int &v1, int &v2) { int tmp = v1; v1 = v2; v2 = tmp; } \u5f15\u7528\u662f\u5f31\u5316\u7684\u6307\u9488\uff0c\u5360\u7528\u5185\u5b58\u5927\u5c0f\u548c\u6307\u9488\u6ca1\u6709\u533a\u522b 8086 (16bit)\u4e24\u5b57\u8282 x86 (32bit)\u56db\u5b57\u8282 x64 (64bit)\u516b\u5b57\u8282 \u95f4\u63a5\u8bc1\u660e struct Student {int & age;} struct Student2 {int* age;} struct Student3 {int age;} std::cout << \"sizieof(student): \" << sizeof(Student) << std::endl; std::cout << \"sizieof(student2): \" << sizeof(Student2) << std::endl; std::cout << \"sizieof(student3): \" << sizeof(Student3) << std::endl; \u9519\u8bef\u7684\u8bc1\u660e\u65b9\u5f0f\uff08\u539f\u56e0\uff1arefAge\u4f7f\u7528\u7b49\u4ef7age\u53d8\u91cf\uff0c\u6240\u4ee5\u540e\u9762\u6240\u6709\u7684 sizeof() \u76f8\u5f53\u4e8e\u5bf9 age \u548c\u5bf9 age \u7684\u6307\u9488\u8fdb\u884c\u5927\u5c0f\u7684\u5224\u65ad\uff09 int age = 19; int &refAge = age; std::cout << sizeof(refAge) << std::endl; std::cout << sizeof(&refAge) << std::endl; \u76f4\u63a5\u8bc1\u660e\u65b9\u6cd5\uff08\u6307\u9488\u548c\u5f15\u7528\u6c47\u7f16\u4ee3\u7801\u7684\u5b9e\u73b0\u4e00\u6478\u4e00\u6837\uff09 39: int a; 40: int *p = &a; 00007FF68D961013 48 8D 44 24 08 lea rax,[a] 00007FF68D961018 48 89 04 24 mov qword ptr [rsp],rax 41: *p = 30; 00007FF68D96101C 48 8B 04 24 mov rax,qword ptr [rsp] 00007FF68D961020 C7 00 1E 00 00 00 mov dword ptr [rax],1Eh 39: int a; 40: int &p = a; 00007FF622D11013 48 8D 44 24 08 lea rax,[a] 00007FF622D11018 48 89 04 24 mov qword ptr [rsp],rax 41: p = 30; 00007FF622D1101C 48 8B 04 24 mov rax,qword ptr [rsp] 00007FF622D11020 C7 00 1E 00 00 00 mov dword ptr [rax],1Eh Note 00007FF68D961013 \u524d\u9762\u7684\u5730\u5740\u4e0d\u8fc7\u662f\u865a\u5185\u5b58\u5730\u5740\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u865a\u5730\u5740\u5bf9\u5e94\u5230\u5185\u5b58\u7684\u5b9e\u9645\u5730\u5740\u4e2d","title":"reference"},{"location":"reference/#_1","text":"\u5728C\u8bed\u8a00\u4e2d\uff0c\u4f7f\u7528\u6307\u9488\uff08Pointer\uff09\u53ef\u4ee5\u95f4\u63a5\u83b7\u53d6\u3001\u4fee\u6539\u67d0\u4e2a\u53d8\u91cf\u7684\u503c \u5728C++\u4e2d\uff0c\u4f7f\u7528\u5f15\u7528\uff08Reference\uff09\u53ef\u4ee5\u8d77\u5230\u8ddf\u6307\u9488\u7c7b\u4f3c\u7684\u529f\u80fd \u6ce8\u610f: \u5f15\u7528\u76f8\u5f53\u4e8e\u662f\u53d8\u91cf\u7684\u522b\u540d\uff08\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u679a\u4e3e\u3001\u7ed3\u6784\u4f53\u3001\u7c7b\u3001\u6307\u9488\u3001\u6570\u7ec4\u7b49\uff0c\u90fd\u53ef\u4ee5\u6709\u5f15\u7528\uff09 \u5bf9\u5f15\u7528\u505a\u8ba1\u7b97\uff0c\u5c31\u662f\u5bf9\u5f15\u7528\u6240\u6307\u5411\u7684\u53d8\u91cf\u505a\u8ba1\u7b97 \u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e00\u65e6\u6307\u5411\u4e86\u67d0\u4e2a\u53d8\u91cf\uff0c\u5c31\u4e0d\u53ef\u4ee5\u518d\u6539\u53d8\uff0c\u201c\u4ece\u4e00\u800c\u7ec8\u201d \u53ef\u4ee5\u5229\u7528\u5f15\u7528\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u5f15\u7528\uff0c\u76f8\u5f53\u4e8e\u67d0\u4e2a\u53d8\u91cf\u7684\u591a\u4e2a\u522b\u540d \u4e0d\u5b58\u5728[\u5f15\u7528\u7684\u5f15\u7528\u3001\u6307\u5411\u5f15\u7528\u7684\u6307\u9488\u3001\u5f15\u7528\u6570\u7ec4] \u5f15\u7528\u5b58\u5728\u7684\u4ef7\u503c\u4e4b\u4e00\uff1a\u6bd4\u6307\u9488\u66f4\u5b89\u5168\u3001\u51fd\u6570\u8fd4\u56de\u503c\u53ef\u4ee5\u88ab\u8d4b\u503c \u5f15\u7528\u7684\u672c\u8d28\u5c31\u662f\u6307\u9488\uff0c\u53ea\u662f\u7f16\u8bd1\u5668\u524a\u5f31\u4e86\u5b83\u7684\u529f\u80fd\uff0c\u6240\u4ee5\u5f15\u7528\u5c31\u662f\u5f31\u5316\u4e86\u7684\u6307\u9488 \u4e00\u4e2a\u5f15\u7528\u5360\u7528\u4e00\u4e2a\u6307\u9488\u7684\u5927\u5c0f","title":"\u5f15\u7528"},{"location":"reference/#_2","text":"\u521d\u59cb\u5316\u5f15\u7528\u53d8\u91cf\u4ece\u4e00\u800c\u7ec8 int heading1 = 20; int heading2 = 9; int &refHeading = heading1; refHeading = heading2; //\u53ea\u662f\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u4e0d\u662f\u521b\u5efa\u5f15\u7528 \u53cd\u590d\u8c03\u7528 swap(int&,int&) \u51fd\u6570\u597d\u50cf\u4e0d\u7b26\u5408\"\u4ece\u4e00\u800c\u7ec8\"\u7684\u6982\u5ff5\u662f\u56e0\u4e3a\uff0c\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u6808\u7a7a\u95f4\uff0c\u6bcf\u4e00\u6b21\u8c03\u7528\u90fd\u4f1a\u91cd\u65b0\u521b\u5efa\u65b0\u7684\u5f15\u7528 void swap(int &v1, int &v2) { int tmp = v1; v1 = v2; v2 = tmp; } \u5f15\u7528\u662f\u5f31\u5316\u7684\u6307\u9488\uff0c\u5360\u7528\u5185\u5b58\u5927\u5c0f\u548c\u6307\u9488\u6ca1\u6709\u533a\u522b 8086 (16bit)\u4e24\u5b57\u8282 x86 (32bit)\u56db\u5b57\u8282 x64 (64bit)\u516b\u5b57\u8282 \u95f4\u63a5\u8bc1\u660e struct Student {int & age;} struct Student2 {int* age;} struct Student3 {int age;} std::cout << \"sizieof(student): \" << sizeof(Student) << std::endl; std::cout << \"sizieof(student2): \" << sizeof(Student2) << std::endl; std::cout << \"sizieof(student3): \" << sizeof(Student3) << std::endl; \u9519\u8bef\u7684\u8bc1\u660e\u65b9\u5f0f\uff08\u539f\u56e0\uff1arefAge\u4f7f\u7528\u7b49\u4ef7age\u53d8\u91cf\uff0c\u6240\u4ee5\u540e\u9762\u6240\u6709\u7684 sizeof() \u76f8\u5f53\u4e8e\u5bf9 age \u548c\u5bf9 age \u7684\u6307\u9488\u8fdb\u884c\u5927\u5c0f\u7684\u5224\u65ad\uff09 int age = 19; int &refAge = age; std::cout << sizeof(refAge) << std::endl; std::cout << sizeof(&refAge) << std::endl; \u76f4\u63a5\u8bc1\u660e\u65b9\u6cd5\uff08\u6307\u9488\u548c\u5f15\u7528\u6c47\u7f16\u4ee3\u7801\u7684\u5b9e\u73b0\u4e00\u6478\u4e00\u6837\uff09 39: int a; 40: int *p = &a; 00007FF68D961013 48 8D 44 24 08 lea rax,[a] 00007FF68D961018 48 89 04 24 mov qword ptr [rsp],rax 41: *p = 30; 00007FF68D96101C 48 8B 04 24 mov rax,qword ptr [rsp] 00007FF68D961020 C7 00 1E 00 00 00 mov dword ptr [rax],1Eh 39: int a; 40: int &p = a; 00007FF622D11013 48 8D 44 24 08 lea rax,[a] 00007FF622D11018 48 89 04 24 mov qword ptr [rsp],rax 41: p = 30; 00007FF622D1101C 48 8B 04 24 mov rax,qword ptr [rsp] 00007FF622D11020 C7 00 1E 00 00 00 mov dword ptr [rax],1Eh Note 00007FF68D961013 \u524d\u9762\u7684\u5730\u5740\u4e0d\u8fc7\u662f\u865a\u5185\u5b58\u5730\u5740\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u865a\u5730\u5740\u5bf9\u5e94\u5230\u5185\u5b58\u7684\u5b9e\u9645\u5730\u5740\u4e2d","title":"\u6c47\u7f16\u5206\u6790"}]}